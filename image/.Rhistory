q*()
q()
setwd("~/Code/repos/nba")
source('/media/shared/GMF/Code/repos/nba/runapp.R')
install.packages("shiny")
library(shiny)
### function to add some data fields
addNBAData <- function(nba) {
# set opponent stats in each game:
ind0 = which(nba$tm==nba$home)
ind1 = which(nba$tm==nba$away)
vars = c("pts", "fgm", "fga", "ftm", "fta", "X3pm", "X3pa", "to", "tot")
for (v in vars) {
ov = paste("o",v,sep="")
nba[ind0,ov] = nba[ind1,v]
nba[ind1,ov] = nba[ind0,v]
}
# add shooting percentages
nba$fgpct=nba$fgm/nba$fga * 100
nba$X3ppct=nba$X3pm/nba$X3pa * 100
nba$ftpct=nba$ftm/nba$fta * 100
nba$ofgpct=nba$ofgm/nba$ofga * 100
nba$oX3ppct=nba$oX3pm/nba$oX3pa * 100
nba$oftpct=nba$oftm/nba$ofta * 100
# add number of games into season
nba$gamenum = 0
for (n in levels(nba$tm)) {
ind = which(nba$tm==n)
nba$gamenum[ind] = 1:length(ind)
}
# add wins & home/away status
nba$ishome = (nba$tm == nba$home)
nba$win = nba$pts > nba$opts
# add profit based on moneyline bets
nba$profit = exp(sign(nba$line)*(log(abs(nba$line)) - log(100))) - as.numeric((nba$line>0))
nba$profit[which(nba$win==FALSE)] = -1
nba$lineodds = exp(sign(nba$line)*(log(abs(nba$line)) - log(100))) - as.numeric((nba$line>0))
return(nba)
}
nba = read.csv("scores_team_00213.csv") # team box scores 2013-14
nba = addNBAData(nba)
library(shiny)
### function to add some data fields
addNBAData <- function(nba) {
# set opponent stats in each game:
ind0 = which(nba$tm==nba$home)
ind1 = which(nba$tm==nba$away)
vars = c("pts", "fgm", "fga", "ftm", "fta", "X3pm", "X3pa", "to", "tot")
for (v in vars) {
ov = paste("o",v,sep="")
nba[ind0,ov] = nba[ind1,v]
nba[ind1,ov] = nba[ind0,v]
}
# add shooting percentages
nba$fgpct=nba$fgm/nba$fga * 100
nba$X3ppct=nba$X3pm/nba$X3pa * 100
nba$ftpct=nba$ftm/nba$fta * 100
nba$ofgpct=nba$ofgm/nba$ofga * 100
nba$oX3ppct=nba$oX3pm/nba$oX3pa * 100
nba$oftpct=nba$oftm/nba$ofta * 100
# add number of games into season
nba$gamenum = 0
for (n in levels(nba$tm)) {
ind = which(nba$tm==n)
nba$gamenum[ind] = 1:length(ind)
}
# add wins & home/away status
nba$ishome = (nba$tm == nba$home)
nba$win = nba$pts > nba$opts
# add profit based on moneyline bets
#nba$profit = exp(sign(nba$line)*(log(abs(nba$line)) - log(100))) - as.numeric((nba$line>0))
#nba$profit[which(nba$win==FALSE)] = -1
#nba$lineodds = exp(sign(nba$line)*(log(abs(nba$line)) - log(100))) - as.numeric((nba$line>0))
return(nba)
}
nba = addNBAData(nba)
source('/media/shared/GMF/Code/repos/nba/runapp.R')
setwd("~/Code/repos/nba/temp")
libary(shiny)
library(shiny)
runApp()
runApp()
library(ggplot2)
install.packages("ggplot2")
runApp()
### function to add some data fields
addNBAData <- function(nba) {
# set opponent stats in each game:
ind0 = which(nba$tm==nba$home)
ind1 = which(nba$tm==nba$away)
vars = c("pts", "fgm", "fga", "ftm", "fta", "X3pm", "X3pa", "to", "tot")
for (v in vars) {
ov = paste("o",v,sep="")
nba[ind0,ov] = nba[ind1,v]
nba[ind1,ov] = nba[ind0,v]
}
# add shooting percentages
nba$fgpct=nba$fgm/nba$fga * 100
nba$X3ppct=nba$X3pm/nba$X3pa * 100
nba$ftpct=nba$ftm/nba$fta * 100
nba$ofgpct=nba$ofgm/nba$ofga * 100
nba$oX3ppct=nba$oX3pm/nba$oX3pa * 100
nba$oftpct=nba$oftm/nba$ofta * 100
# add number of games into season
nba$gamenum = 0
for (n in levels(nba$tm)) {
ind = which(nba$tm==n)
nba$gamenum[ind] = 1:length(ind)
}
# add wins & home/away status
nba$ishome = (nba$tm == nba$home)
nba$win = nba$pts > nba$opts
return(nba)
}
### box score data ###
## load data
nba = read.csv("scorelines_00213.csv") # team box scores 2013-14
nba = addNBAData(nba)
library(shiny)
library(ggplot2)
### function to add some data fields
addNBAData <- function(nba) {
# set opponent stats in each game:
ind0 = which(nba$tm==nba$home)
ind1 = which(nba$tm==nba$away)
vars = c("pts", "fgm", "fga", "ftm", "fta", "X3pm", "X3pa", "to", "tot")
for (v in vars) {
ov = paste("o",v,sep="")
nba[ind0,ov] = nba[ind1,v]
nba[ind1,ov] = nba[ind0,v]
}
# add shooting percentages
nba$fgpct=nba$fgm/nba$fga * 100
nba$X3ppct=nba$X3pm/nba$X3pa * 100
nba$ftpct=nba$ftm/nba$fta * 100
nba$ofgpct=nba$ofgm/nba$ofga * 100
nba$oX3ppct=nba$oX3pm/nba$oX3pa * 100
nba$oftpct=nba$oftm/nba$ofta * 100
# add number of games into season
nba$gamenum = 0
for (n in levels(nba$tm)) {
ind = which(nba$tm==n)
nba$gamenum[ind] = 1:length(ind)
}
# add wins & home/away status
nba$ishome = (nba$tm == nba$home)
nba$win = nba$pts > nba$opts
return(nba)
}
nba = read.csv("scorelines_00213.csv") # team box scores 2013-14
library(shiny)
### function to add some data fields
addNBAData <- function(nba) {
# add shooting percentages
nba$fgpct=nba$fgm/nba$fga * 100
nba$X3ppct=nba$X3pm/nba$X3pa * 100
nba$ftpct=nba$ftm/nba$fta * 100
# add number of games into season
nba$gamenum = 0
for (n in levels(nba$tm)) {
ind = which(nba$tm==n)
nba$gamenum[ind] = 1:length(ind)
}
# add wins & home/away status
nba$ishome = (nba$tm == nba$home)
nba$win = nba$pts > nba$opts
return(nba)
}
### box score data ###
## load data
nba = read.csv("scores_00214.csv") # team box scores 2013-14
nba = addNBAData(nba)
library(shiny)
### function to add some data fields
addNBAData <- function(nba) {
# add shooting percentages
nba$fgpct=nba$fgm/nba$fga * 100
nba$X3ppct=nba$X3pm/nba$X3pa * 100
nba$ftpct=nba$ftm/nba$fta * 100
# add number of games into season
nba$gamenum = 0
for (n in levels(nba$tm)) {
ind = which(nba$tm==n)
nba$gamenum[ind] = 1:length(ind)
}
# add wins & home/away status
nba$ishome = (nba$tm == nba$home)
nba$win = nba$pts > nba$opts
return(nba)
}
### box score data ###
## load data
nba = read.csv("scores_00214.csv") # team box scores 2013-14
nba = addNBAData(nba)
library(shiny)
### function to add some data fields
addNBAData <- function(nba) {
# add shooting percentages
nba$fgpct=nba$fgm/nba$fga * 100
nba$X3ppct=nba$X3pm/nba$X3pa * 100
nba$ftpct=nba$ftm/nba$fta * 100
# add number of games into season
nba$gamenum = 0
for (n in levels(nba$tm)) {
ind = which(nba$tm==n)
nba$gamenum[ind] = 1:length(ind)
}
# add wins & home/away status
nba$ishome = (nba$tm == nba$home)
nba$win = nba$pts > nba$opts
return(nba)
}
nba = read.csv("scores_00214.csv") # team box scores 2013-14
nba = addNBAData(nba)
# add shooting percentages
nba$fgpct=nba$fgm/nba$fga * 100
nba$X3ppct=nba$X3pm/nba$X3pa * 100
nba$ftpct=nba$ftm/nba$fta * 100
# add number of games into season
nba$gamenum = 0
for (n in levels(nba$tm)) {
ind = which(nba$tm==n)
nba$gamenum[ind] = 1:length(ind)
}
# add wins & home/away status
nba$ishome = (nba$tm == nba$home)
nba$win = nba$pts > nba$opts
# add shooting percentages
nba$fgpct=nba$fgm/nba$fga * 100
nba$X3ppct=nba$X3pm/nba$X3pa * 100
nba$ftpct=nba$ftm/nba$fta * 100
# add number of games into season
nba$gamenum = 0
for (n in levels(nba$tm)) {
ind = which(nba$tm==n)
nba$gamenum[ind] = 1:length(ind)
}
nba$ishome = (nba$tm == nba$home)
nba$win = nba$pts > nba$opts
nba$pts
nba = read.csv("player_stats_2014.csv")
str(nba)
nba = read.csv("player_stats_2014.csv")
str(nba)
nba = read.csv("player_stats_2014.csv")
vars = c("fgm", "fga", "X3pm", "X3pa", "ftm", "fta", "oreb", "dreb", "ast", "pf", "stl", "tov", "bs", "pts")
str(nba)
nbaClust = kmeans(nba[,vars], 10, iter.max=20, nstart=1)
vars
nba = read.csv("player_stats_2014.csv")
vars = c("fgm", "fga", "x3pm", "x3pa", "ftm", "fta", "oreb", "dreb", "ast", "pf", "stl", "tov", "bs", "pts", "ft_fg")
str(nba)
# cluster
nbaClust = kmeans(nba[,vars], 10, iter.max=20, nstart=1)
nba[,vars]
nba[,vars[0]]
nba[,vars[1]]
nba[,vars[2]]
nba[,vars[3]]
nba[,vars[4]]
nba[,vars[5]]
nba[,vars[6]]
nba[,vars[7]]
nba[,vars[8]]
nba[,vars[9]]
nba[,vars[10]]
nba[,vars[11]]
nba[,vars[12]]
vars[12]
str(nba)
nba = read.csv("player_stats_2014.csv")
vars = c("fgm", "fga", "x3pm", "x3pa", "ftm", "fta", "oreb", "dreb", "ast", "pf", "stl", "tov", "bs", "pts", "ft_fg")
str(nba)
# cluster
nbaClust = kmeans(nba[,vars], 10, iter.max=20, nstart=1)
nba = read.csv("player_stats_2014.csv")
vars = c("fgm", "fga", "x3pm", "x3pa", "ftm", "fta", "oreb", "dreb", "ast", "pf", "stl", "tov", "bs", "pts")
#vars = c("fgm", "fga", "x3pm", "x3pa", "ftm", "fta", "oreb", "dreb", "ast", "pf", "stl", "tov", "bs", "pts", "ft_fg")
str(nba)
# cluster
nbaClust = kmeans(nba[,vars], 10, iter.max=20, nstart=1)
nbaClust
nba$cluster = nbaClust
str(nba)
length(nbaClust)
nbaClust = kmeans(nba[,vars], 10, iter.max=20, nstart=1)
nbaClust
nbaClust$cluster
nba$cluster = nbaClust$cluster
?write.csv
write.csv(nba, file="nbaclusters.csv")
libary("xtable")
install.packages("xtable")
library("xtable")
?xtable
print.xtable
?print.xtable
x = xtable(nba)
print.xtable(x, type="html", file="nbaclusters.txt")
# player data
nba = read.csv("player_stats_2014.csv")
vars = c("fgm", "fga", "x3pm", "x3pa", "ftm", "fta", "oreb", "dreb", "ast", "pf", "stl", "tov", "bs", "pts")
#vars = c("fgm", "fga", "x3pm", "x3pa", "ftm", "fta", "oreb", "dreb", "ast", "pf", "stl", "tov", "bs", "pts", "ft_fg")
str(nba)
# cluster
nbaClust = kmeans(nba[,vars], 10, iter.max=20, nstart=1)
nba$cluster = nbaClust$cluster
write.csv(nba, file="nbaclusters.csv")
library("xtable")
x = xtable(nba)
print.xtable(x, type="html", file="nbaclusters.txt")
# player data
nba = read.csv("player_stats_2014.csv")
vars = c("fgm", "fga", "x3pm", "x3pa", "ftm", "fta", "oreb", "dreb", "ast", "pf", "stl", "tov", "bs", "pts")
#vars = c("fgm", "fga", "x3pm", "x3pa", "ftm", "fta", "oreb", "dreb", "ast", "pf", "stl", "tov", "bs", "pts", "ft_fg")
str(nba)
# cluster
nbaClust = kmeans(nba[,vars], 10, iter.max=20, nstart=1)
nba$cluster = nbaClust$cluster
write.csv(nba, file="nbaclusters.csv")
library("xtable")
x = xtable(nba)
print.xtable(x, type="html", file="nbaclusters.txt")
str(nba)
nba
# player data
nba = read.csv("player_stats_2014.csv")
vars = c("fgm", "fga", "x3pm", "x3pa", "ftm", "fta", "oreb", "dreb", "ast", "pf", "stl", "tov", "bs", "pts")
#vars = c("fgm", "fga", "x3pm", "x3pa", "ftm", "fta", "oreb", "dreb", "ast", "pf", "stl", "tov", "bs", "pts", "ft_fg")
str(nba)
# cluster
nbaClust = kmeans(nba[,vars], 10, iter.max=20, nstart=1)
nba$cluster = nbaClust$cluster
write.csv(nba, file="nbaclusters.csv")
library("xtable")
x = xtable(nba)
print.xtable(x, type="html", file="nbaclusters.txt")
## how many clusters is good?
# bw = c()
# for (k in seq(2,50)) {
#   cl = kmeans(stats[,vars], k, iter.max=10, nstart=1)
#   bw = c(bw, cl$tot.withinss)
# }
# cl$betweenss
# plot(seq(2,50), bw, xlab="Number of clusters", ylab="Total within cluster distance")
